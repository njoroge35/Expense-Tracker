{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Budget.js","components/Budgets.js","components/AddBudget.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","showAbout","useLocation","to","type","pathname","Footer","Budget","budget","onDelete","onToggle","ispaidout","onDoubleClick","id","exptype","name","cursor","value","amount","displayType","thousandSeparator","prefix","renderText","props","Budgets","budgets","map","index","AddBudget","useState","setName","setAmount","setExptype","setIspaidout","onSubmit","e","preventDefault","alert","placeholder","onChange","target","checked","currentTarget","App","showAddBudget","setShowAddBudget","setBudgets","useEffect","getBudgets","a","fetchBudgets","budgetsFromServer","fetch","res","json","data","fetchBudget","addBudget","method","headers","body","JSON","stringify","deleteBudget","status","filter","toggleReminder","budgetToToggle","updateBudget","path","exact","render","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kRAGMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,wBACEA,QAASA,EACTC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAHZ,SAKGJ,GAGN,EAEDF,EAAOO,aAAe,CACpBN,MAAO,aASMD,QCnBTQ,EAAS,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QACxBC,GADiD,EAAhBC,UACtBC,eAEjB,OACE,yBAAQR,UAAU,SAAlB,UACE,6BAAKG,IACL,sBAAKH,UAAU,aAAf,UACA,cAAC,IAAD,CAAMS,GAAG,IAAT,SACI,wBAAQC,KAAK,SAASV,UAAW,oBAAjC,oBAImB,MAAtBM,EAASK,UACR,cAAC,EAAD,CACEhB,MAAOU,EAAU,MAAQ,QACzBT,KAAMS,EAAU,QAAU,cAC1BR,QAASO,SAUlB,EAEDF,EAAOD,aAAe,CACpBE,MAAO,mBAOMD,QChCAU,EARA,WACb,OACE,iCACE,gDAGL,E,gBCwBcC,EA3BA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClC,OACE,sBACEhB,UAAS,iBAAYc,EAAOG,WAAa,aACzCC,cAAe,kBAAMF,EAASF,EAAOK,GAAtB,EAFjB,UAIE,gCAAQL,EAAOM,UACf,+BACGN,EAAOO,KAAM,IACd,cAAC,IAAD,CACEvB,MAAO,CAAEH,MAAO,MAAO2B,OAAQ,WAC/BzB,QAAS,kBAAMkB,EAASD,EAAOK,GAAtB,OAGb,uBACN,cAAC,IAAD,CACEI,MAAOT,EAAOU,OACdxB,UAAU,oBACVyB,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,OACRC,WAAY,SAACL,EAAOM,GAAR,OAAkB,+CAASA,GAAT,aAAiBN,IAAnC,MAIb,ECjBcO,EAVC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAAShB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACE,mCACGe,EAAQC,KAAI,SAAClB,EAAQmB,GAAT,OACX,cAAC,EAAD,CAAoBnB,OAAQA,EAAQC,SAAUA,EAAUC,SAAUA,GAArDiB,EADF,KAKlB,ECsEcC,EA7EG,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MAAY,EACP+B,mBAAS,IADF,mBACxBd,EADwB,KAClBe,EADkB,OAEHD,mBAAS,IAFN,mBAExBX,EAFwB,KAEhBa,EAFgB,OAGDF,mBAAS,IAHR,mBAGxBf,EAHwB,KAGfkB,EAHe,OAIGH,oBAAS,GAJZ,mBAIxBlB,EAJwB,KAIbsB,EAJa,KA6B/B,OAEE,uBAAMvC,UAAU,WAAWwC,SAxBZ,SAACC,GAChBA,EAAEC,iBAEGrB,EAGMG,EAGAJ,GAKXhB,EAAM,CAAEiB,KAAMA,EAAMG,OAAQA,EAAQJ,QAAQA,EAAQH,cAEpDmB,EAAQ,IACRC,EAAU,IACVC,EAAW,IACXC,GAAa,IATXI,MAAM,uCAHNA,MAAM,uCAHNA,MAAM,gCAgBT,EAIC,UACE,sBAAK3C,UAAU,eAAf,UACE,8CACA,uBACEU,KAAK,OACLkC,YAAY,YACZrB,MAAOF,EACPwB,SAAU,SAACJ,GAAD,OAAOL,EAAQK,EAAEK,OAAOvB,MAAxB,OAGd,sBAAKvB,UAAU,eAAf,UACE,qDAEH,yBAAQqB,KAAK,SAASX,KAAK,SAAWmC,SAAU,SAACJ,GAAD,OAAOH,EAAWG,EAAEK,OAAOvB,MAA3B,EAAhD,UACD,wBAASA,MAAM,GAAf,eACA,wBAASA,MAAM,eAAf,2BACA,wBAASA,MAAM,QAAf,kBACA,wBAASA,MAAM,eAAf,gCAIE,sBAAKvB,UAAU,eAAf,UACE,2CACA,uBACEU,KAAK,OACLkC,YAAY,SACZrB,MAAOC,EACPqB,SAAU,SAACJ,GAAD,OAAOJ,EAAUI,EAAEK,OAAOvB,MAA1B,OAId,sBAAKvB,UAAU,kCAAf,UACE,6CACA,uBACEU,KAAK,WACLqC,QAAS9B,EACTM,MAAON,EACP4B,SAAU,SAACJ,GAAD,OAAOF,EAAaE,EAAEO,cAAcD,QAApC,OAId,uBAAOrC,KAAK,SAASa,MAAM,cAAcvB,UAAU,oBAGxD,ECsCciD,EA7GH,WAAO,IAAD,EAE4Bd,oBAAS,GAFrC,mBAEPe,EAFO,KAEQC,EAFR,OAGgBhB,mBAAS,IAHzB,mBAGPJ,EAHO,KAGEqB,EAHF,KAKdC,qBAAU,WACN,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEACiBC,IADjB,OACTC,EADS,OAEfL,EAAWK,GAFI,2CAAH,qDAIhBH,GACH,GAAE,IAGH,IAAME,EAAY,uCAAG,8BAAAD,EAAA,sEACCG,MAAM,iCADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQZC,EAAW,uCAAG,WAAO3C,GAAP,iBAAAoC,EAAA,sEACEG,MAAM,iCAAD,OAAkCvC,IADzC,cACVwC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAGTA,GAHS,2CAAH,sDAOXE,EAAS,uCAAG,WAAOjD,GAAP,iBAAAyC,EAAA,sEACIG,MAAM,gCAAiC,CACrDM,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUtD,KANX,cACR6C,EADQ,gBAQKA,EAAIC,OART,OAQRC,EARQ,OASdT,EAAW,GAAD,mBAAKrB,GAAL,CAAc8B,KATV,2CAAH,sDAcTQ,EAAY,uCAAG,WAAOlD,GAAP,SAAAoC,EAAA,sEACCG,MAAM,iCAAD,OAAkCvC,GAAM,CAC3D6C,OAAQ,WAFK,OAKF,MALE,OAKbM,OACElB,EAAWrB,EAAQwC,QAAO,SAACzD,GAAD,OAAYA,EAAOK,KAAOA,CAA1B,KAC1BwB,MAAM,+BAPK,2CAAH,sDAYZ6B,EAAc,uCAAG,WAAOrD,GAAP,qBAAAoC,EAAA,sEACUO,EAAY3C,GADtB,cACbsD,EADa,OAEbC,EAFa,2BAEMD,GAFN,IAEsBxD,WAAYwD,EAAexD,YAFjD,SAIDyC,MAAM,iCAAD,OAAkCvC,GAAM,CAC3D6C,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUM,KATN,cAIbf,EAJa,gBAYAA,EAAIC,OAZJ,OAYbC,EAZa,OAcnBT,EACIrB,EAAQC,KAAI,SAAClB,GAAD,OACRA,EAAOK,KAAOA,EAAd,2BAAuBL,GAAvB,IAA+BG,UAAW4C,EAAK5C,YAAaH,CADpD,KAfG,4CAAH,sDAqBpB,OACI,cAAC,IAAD,UACI,sBAAKd,UAAU,YAAf,UACI,cAAC,EAAD,CACII,MAAO,kBAAM+C,GAAkBD,EAAxB,EACP7C,QAAS6C,IAEb,cAAC,IAAD,CACIyB,KAAK,IACLC,OAAK,EACLC,OAAQ,SAAChD,GAAD,OACJ,qCACKqB,GAAiB,cAAC,EAAD,CAAW9C,MAAO2D,IACnChC,EAAQ+C,OAAS,EACd,cAAC,EAAD,CACI/C,QAASA,EACTf,SAAUwD,EACVzD,SAAUsD,IAId,0BAXJ,IAiBZ,cAAC,EAAD,QAIf,ECvGcU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,G","file":"static/js/main.20d43fbb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\nimport { Link } from 'react-router-dom'\n\nconst Header = ({ title, onAdd, showAdd, showAbout }) => {\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <div className='navbuttons'>\n      <Link to='/'>\n          <button type=\"button\" className={\"btn btn-secondary\"}>\n            Home\n          </button>\n      </Link>\n      {location.pathname === '/' && (\n        <Button\n          color={showAdd ? 'red' : 'green'}\n          text={showAdd ? 'Close' : 'Add Expense'}\n          onClick={onAdd}\n        />\n      )}\n      \n    \n    </div>\n      \n    </header>\n   \n  )\n}\n\nHeader.defaultProps = {\n  title: 'Expense Tracker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>@David Njoroge</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport { default as NumberFormat } from 'react-number-format';\n\n\nconst Budget = ({ budget, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`budget ${budget.ispaidout && 'ispaidout'}`}\n      onDoubleClick={() => onToggle(budget.id)}\n    >\n      <small>{budget.exptype}</small>\n      <h3>\n        {budget.name}{' '}\n        <FaTimes\n          style={{ color: 'red', cursor: 'pointer' }}\n          onClick={() => onDelete(budget.id)}\n        />\n      </h3>\n      <hr></hr>\n<NumberFormat\n  value={budget.amount}\n  className=\"expenditureamount\"\n  displayType={'text'}\n  thousandSeparator={true}\n  prefix={'KES '}\n  renderText={(value, props) => <div {...props}>{value}</div>}\n/>\n    </div>\n  )\n}\n\nexport default Budget\n","import React from 'react'\nimport Budget from './Budget'\n\nconst Budgets = ({ budgets, onDelete, onToggle }) => {\n  return (\n    <>\n      {budgets.map((budget, index) => (\n        <Budget key={index} budget={budget} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Budgets\n","import React from 'react'\n\nimport { useState } from 'react'\n\nconst AddBudget = ({ onAdd }) => {\n  const [name, setName] = useState('')\n  const [amount, setAmount] = useState('')\n  const [exptype, setExptype] = useState('')\n  const [ispaidout, setIspaidout] = useState(false)\n\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!name) {\n      alert('Please add a expenditure name');\n      return;\n    }else if (!amount){\n      alert('Please enter the expenditure amount');\n      return;\n    }else if (!exptype){\n      alert('Please select the  expenditure type');\n      return;\n    }\n\n    onAdd({ name: name, amount: amount, exptype:exptype,ispaidout })\n\n    setName('')\n    setAmount('')\n    setExptype('')\n    setIspaidout(false)\n  }\n\n  return (\n \n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Item Name</label>\n        <input\n          type='text'\n          placeholder='Item name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Expenditure Type</label>\n     \n     <select name='extype' type=\"select\"   onChange={(e) => setExptype(e.target.value)} >\n    <option  value=\"\"> </option>\n    <option  value=\"Personal Use\">Personal Use </option>\n    <option  value=\"Home \">Home</option>\n    <option  value=\"Miscallenous\">Miscallenous</option>\n    </select>\n\n      </div>\n      <div className='form-control'>\n        <label>Amount</label>\n        <input\n          type='text'\n          placeholder='Amount'\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Paid Out</label>\n        <input\n          type='checkbox'\n          checked={ispaidout}\n          value={ispaidout}\n          onChange={(e) => setIspaidout(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Record' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddBudget\n","import {useEffect, useState} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Budgets from './components/Budgets'\nimport AddBudget from './components/AddBudget'\n\n\nconst App = () => {\n\n    const [showAddBudget, setShowAddBudget] = useState(false)\n    const [budgets, setBudgets] = useState([])\n\n    useEffect(() => {\n        const getBudgets = async () => {\n            const budgetsFromServer = await fetchBudgets()\n            setBudgets(budgetsFromServer)\n        }\n        getBudgets()\n    }, [])\n\n    // Fetch expense record\n    const fetchBudgets = async () => {\n        const res = await fetch('http://localhost:3000/budgets')\n        const data = await res.json()\n\n        return data\n    }\n\n    // Fetch expense record\n    const fetchBudget = async (id) => {\n        const res = await fetch(`http://localhost:3000/budgets/${id}`)\n        const data = await res.json()\n        return data\n    }\n\n    // Add expense record \n    const addBudget = async (budget) => {\n        const res = await fetch('http://localhost:3000/budgets', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(budget),\n        })\n        const data = await res.json()\n        setBudgets([...budgets, data])\n    }\n\n    // Delete expense record\n \n    const deleteBudget = async (id) => {\n        const res = await fetch(`http://localhost:3000/budgets/${id}`, {\n            method: 'DELETE',\n        })\n        //We should control the response status to decide if we will change the state or not.\n        res.status === 200\n            ? setBudgets(budgets.filter((budget) => budget.id !== id))\n            : alert('Error Deleting This expense')\n    }\n\n\n    // Toggle PaidOut Status\n    const toggleReminder = async (id) => {\n        const budgetToToggle = await fetchBudget(id)\n        const updateBudget = {...budgetToToggle, ispaidout: !budgetToToggle.ispaidout}\n\n        const res = await fetch(`http://localhost:3000/budgets/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(updateBudget),\n        })\n\n        const data = await res.json()\n\n        setBudgets(\n            budgets.map((budget) =>\n                budget.id === id ? {...budget, ispaidout: data.ispaidout} : budget\n            )\n        )\n    }\n\n    return (\n        <Router>\n            <div className='container'>\n                <Header\n                    onAdd={() => setShowAddBudget(!showAddBudget)}\n                    showAdd={showAddBudget}\n                />\n                <Route\n                    path='/'\n                    exact\n                    render={(props) => (\n                        <>\n                            {showAddBudget && <AddBudget onAdd={addBudget}/>}\n                            {budgets.length > 0 ? (\n                                <Budgets\n                                    budgets={budgets}\n                                    onToggle={toggleReminder}\n                                    onDelete={deleteBudget}\n\n                                />\n                            ) : (\n                                'No expenditure found '\n                            )}\n                        </>\n                    )}\n                />\n                \n                <Footer/>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}