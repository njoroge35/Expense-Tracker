{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/njoroge/Expense-Tracker/expense-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Budgets from './components/Budgets';\nimport AddBudget from './components/AddBudget';\n\nconst App = () => {\n  _s();\n\n  const [showAddBudget, setShowAddBudget] = useState(false);\n  const [budgets, setBudgets] = useState([]);\n  useEffect(() => {\n    const getBudgets = async () => {\n      const budgetsFromServer = await fetchBudgets();\n      setBudgets(budgetsFromServer);\n    };\n\n    getBudgets();\n  }, []); // Fetch expense record\n\n  const fetchBudgets = async () => {\n    const res = await fetch('http://localhost:5000/budgets');\n    const data = await res.json();\n    return data;\n  }; // Fetch expense record\n\n\n  const fetchBudget = async id => {\n    const res = await fetch(`http://localhost:5000/budgets/${id}`);\n    const data = await res.json();\n    return data;\n  }; // Add expense record \n\n\n  const addBudget = async budget => {\n    const res = await fetch('http://localhost:5000/budgets', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(budget)\n    });\n    const data = await res.json();\n    setBudgets([...budgets, data]);\n  }; // Delete expense record\n\n\n  const deleteBudget = async id => {\n    const res = await fetch(`http://localhost:5000/budgets/${id}`, {\n      method: 'DELETE'\n    }); //We should control the response status to decide if we will change the state or not.\n\n    res.status === 200 ? setBudgets(budgets.filter(budget => budget.id !== id)) : alert('Error Deleting This expense');\n  }; // Toggle PaidOut Status\n\n\n  const toggleReminder = async id => {\n    const budgetToToggle = await fetchBudget(id);\n    const updateBudget = { ...budgetToToggle,\n      ispaidout: !budgetToToggle.ispaidout\n    };\n    const res = await fetch(`http://localhost:5000/budgets/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updateBudget)\n    });\n    const data = await res.json();\n    setBudgets(budgets.map(budget => budget.id === id ? { ...budget,\n      ispaidout: data.ispaidout\n    } : budget));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddBudget(!showAddBudget),\n        showAdd: showAddBudget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [showAddBudget && /*#__PURE__*/_jsxDEV(AddBudget, {\n            onAdd: addBudget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 47\n          }, this), budgets.length > 0 ? /*#__PURE__*/_jsxDEV(Budgets, {\n            budgets: budgets,\n            onToggle: toggleReminder,\n            onDelete: deleteBudget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this) : 'No expenditure found ']\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"osOiwwJFp9+sxGvJVde0gfVJ4bY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/njoroge/Expense-Tracker/expense-tracker/src/App.js"],"names":["useEffect","useState","BrowserRouter","Router","Route","Header","Footer","Budgets","AddBudget","App","showAddBudget","setShowAddBudget","budgets","setBudgets","getBudgets","budgetsFromServer","fetchBudgets","res","fetch","data","json","fetchBudget","id","addBudget","budget","method","headers","body","JSON","stringify","deleteBudget","status","filter","alert","toggleReminder","budgetToToggle","updateBudget","ispaidout","map","props","length"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Budgets from './components/Budgets'\nimport AddBudget from './components/AddBudget'\n\n\nconst App = () => {\n\n    const [showAddBudget, setShowAddBudget] = useState(false)\n    const [budgets, setBudgets] = useState([])\n\n    useEffect(() => {\n        const getBudgets = async () => {\n            const budgetsFromServer = await fetchBudgets()\n            setBudgets(budgetsFromServer)\n        }\n        getBudgets()\n    }, [])\n\n    // Fetch expense record\n    const fetchBudgets = async () => {\n        const res = await fetch('http://localhost:5000/budgets')\n        const data = await res.json()\n\n        return data\n    }\n\n    // Fetch expense record\n    const fetchBudget = async (id) => {\n        const res = await fetch(`http://localhost:5000/budgets/${id}`)\n        const data = await res.json()\n        return data\n    }\n\n    // Add expense record \n    const addBudget = async (budget) => {\n        const res = await fetch('http://localhost:5000/budgets', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(budget),\n        })\n        const data = await res.json()\n        setBudgets([...budgets, data])\n    }\n\n    // Delete expense record\n \n    const deleteBudget = async (id) => {\n        const res = await fetch(`http://localhost:5000/budgets/${id}`, {\n            method: 'DELETE',\n        })\n        //We should control the response status to decide if we will change the state or not.\n        res.status === 200\n            ? setBudgets(budgets.filter((budget) => budget.id !== id))\n            : alert('Error Deleting This expense')\n    }\n\n\n    // Toggle PaidOut Status\n    const toggleReminder = async (id) => {\n        const budgetToToggle = await fetchBudget(id)\n        const updateBudget = {...budgetToToggle, ispaidout: !budgetToToggle.ispaidout}\n\n        const res = await fetch(`http://localhost:5000/budgets/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(updateBudget),\n        })\n\n        const data = await res.json()\n\n        setBudgets(\n            budgets.map((budget) =>\n                budget.id === id ? {...budget, ispaidout: data.ispaidout} : budget\n            )\n        )\n    }\n\n    return (\n        <Router>\n            <div className='container'>\n                <Header\n                    onAdd={() => setShowAddBudget(!showAddBudget)}\n                    showAdd={showAddBudget}\n                />\n                <Route\n                    path='/'\n                    exact\n                    render={(props) => (\n                        <>\n                            {showAddBudget && <AddBudget onAdd={addBudget}/>}\n                            {budgets.length > 0 ? (\n                                <Budgets\n                                    budgets={budgets}\n                                    onToggle={toggleReminder}\n                                    onDelete={deleteBudget}\n\n                                />\n                            ) : (\n                                'No expenditure found '\n                            )}\n                        </>\n                    )}\n                />\n                \n                <Footer/>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}